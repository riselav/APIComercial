/* ---------------------------------------------------- */
/*  Generated by Enterprise Architect Version 13.0 		*/
/*  Created On : 20-mar.-2025 12:23:42 a. m. 				*/
/*  DBMS       : SQL Server 2012 						*/
/* ---------------------------------------------------- */

/* Create Tables */
IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[IVT_MovimientosInventarioDetalle]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
BEGIN
CREATE TABLE [IVT_MovimientosInventarioDetalle]
(
	[nFolioMovimiento] bigint NOT NULL,    -- id de movimiento de inventario al que pertenece el registro
	[nRenglon] smallint NOT NULL,    -- consecutivo de renglón de número de registro 
	[nTipoMovimiento] int NOT NULL,    -- id de catálogo de tipo de movimiento con el que se hizo el cabecero de esta tabla
	[nEfecto] tinyint NOT NULL,    -- tipo de efecto del movimiento de inventario que suma o resta de saldo de existencia
	[nAlmacen] int NOT NULL,    -- id de catálogo de almacén con el que se hizo el cabecero de este registro
	[nFecha] int NOT NULL,    -- fecha del movimiento en formato número
	[nIDArticulo] int NOT NULL,    -- id de folio de catálogo de artículo relacionado al detalle del movimiento
	[nCantidad] decimal(18,4) NOT NULL,    -- cantidad de movimiento del artículo
	[nCostoUnitario] decimal(18,4) NOT NULL,    -- importe de costo unitario que afectará al costo promedio
	[nCostoPartida] decimal(18,4) NOT NULL,    -- valor de la partida del detalle resultado de multiplicar la cantidad por el costo
	[nFolioSolicitud] bigint, --en caso que el movimiento de inventario tenga relacionado un pedido, aquí se guardará el folio Id del mismo
	[nRenglonSolicitud] smallint,--en caso que el movimiento de inventario tenga relacionado un pedido, aquí se guardará el num. de renglón del detalle del mismo con el que se identifica que se está cubriendo lo solicitado 
	[nUltimoCosto] decimal(18,4) NOT NULL,    -- importe de último costo unitario del artículo que aplica en caso que se desee llevar valor de inventario por este valor
	[bLote] bit NOT NULL,    -- campo para saber que el artículo maneja lote
	[bSerie] bit NOT NULL,    -- campo que indica si el artículo maneja series
	[bPedimento] bit NOT NULL,    -- campo que indica si el artículo maneja pedimentos
	[bAplicado] bit NOT NULL,    -- campo para saber que el movimiento ha afectado o no tablas relacionadas a saldos de existencias u otras relacionadas derivadas del tipo de movimiento
	[nIDReferencia] bigint NULL,    -- id opcional relacionado a algun registro que pudiera ser requerido como un agrupador del movimiento de inventario o simplemente como su nombre lo dice una relación de referencia
	[bActivo] bit NOT NULL,    -- campo que indica si está activo o no el registro
	[cUsuario_Registra] varchar(50) NOT NULL,    -- login del usuario que realiza el registro
	[cMaquina_Registra] varchar(50) NOT NULL,    -- nombre del equipo desde donde se realiza el registro
	[dFecha_Registra] datetime NOT NULL,    -- fecha en que se hace el registro
	[cUsuario_Modifica] varchar(50) NULL,    -- login del usuario que realiza la ultima modificación del registro
	[cMaquina_Modifica] varchar(50) NULL,    -- nombre del equipo desde donde se realiza la ultima modificación del registro
	[dFecha_Modifica] datetime NULL,    -- fecha en que se hace la ultima modificación del registro
	[cUsuario_Cancela] varchar(50) NULL,    -- login del usuario que realiza la ultima inactivación del registro
	[cMaquina_Cancela] varchar(50) NULL,    -- nombre del equipo desde donde se realiza la ultima inactivación del registro
	[dFecha_Cancela] datetime NULL    -- fecha en que se hace la ultima inactivación del registro
)


/* Create Primary Keys, Indexes, Uniques, Checks */
	ALTER TABLE [IVT_MovimientosInventarioDetalle] ADD CONSTRAINT [PK_IVT_MovimientosInventarioDetalle]
	PRIMARY KEY CLUSTERED ([nFolioMovimiento] ASC,[nRenglon] ASC)
END
GO

/* Create Foreign Key Constraints */

IF not EXISTS (SELECT 1 FROM SysObjects (NOLOCK) where name ='FK_IVT_MovimientosInventarioDetalle_CAT_Almacenes' AND xtype = 'F')
	ALTER TABLE [IVT_MovimientosInventarioDetalle] ADD CONSTRAINT [FK_IVT_MovimientosInventarioDetalle_CAT_Almacenes]
	FOREIGN KEY ([nAlmacen]) REFERENCES [dbo].[CAT_Almacenes] ([nAlmacen]) ON DELETE No Action ON UPDATE No Action
GO

IF not EXISTS (SELECT 1 FROM SysObjects (NOLOCK) where name ='FK_IVT_MovimientosInventarioDetalle_CAT_Articulos' AND xtype = 'F')
	ALTER TABLE [IVT_MovimientosInventarioDetalle] ADD CONSTRAINT [FK_IVT_MovimientosInventarioDetalle_CAT_Articulos]
	FOREIGN KEY ([nIDArticulo]) REFERENCES [CAT_Articulos] ([nIDArticulo]) ON DELETE No Action ON UPDATE No Action
GO

IF not EXISTS (SELECT 1 FROM SysObjects (NOLOCK) where name ='FK_IVT_MovimientosInventarioDetalle_CAT_TiposMovimientosInventario' AND xtype = 'F')
	ALTER TABLE [IVT_MovimientosInventarioDetalle] ADD CONSTRAINT [FK_IVT_MovimientosInventarioDetalle_CAT_TiposMovimientosInventario]
	FOREIGN KEY ([nTipoMovimiento]) REFERENCES [CAT_TiposMovimientosInventario] ([nTipoMovimiento]) ON DELETE No Action ON UPDATE No Action
GO

IF not EXISTS (SELECT 1 FROM SysObjects (NOLOCK) where name ='FK_IVT_MovimientosInventarioDetalle_IVT_MovimientosInventario' AND xtype = 'F')
	ALTER TABLE [IVT_MovimientosInventarioDetalle] ADD CONSTRAINT [FK_IVT_MovimientosInventarioDetalle_IVT_MovimientosInventario]
	FOREIGN KEY ([nFolioMovimiento]) REFERENCES [IVT_MovimientosInventario] ([nFolioMovimiento]) ON DELETE No Action ON UPDATE No Action
GO