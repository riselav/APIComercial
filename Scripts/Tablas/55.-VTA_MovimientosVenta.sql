/* ---------------------------------------------------- */
/*  Generated by Enterprise Architect Version 13.0 		*/
/*  Created On : 19-feb.-2025 11:59:32 p. m. 				*/
/*  DBMS       : SQL Server 2012 						*/
/* ---------------------------------------------------- */

/* Create Tables */
IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[VTA_MovimientosVenta]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
BEGIN
	CREATE TABLE [VTA_MovimientosVenta]
	(
		[nVenta] bigint NOT NULL,    -- id
		[nTipoRegistro] tinyint NOT NULL,    -- tipo de registro  1=Venta 2=Venta Suspendida 3=Cotización 4=Devolución
		[nTipoVenta] tinyint NULL,    -- tipo de venta para cuando tipo de registro es venta (1)  los valores son  1=Contado 2=Credito
		[nSucursal] int NOT NULL,    -- id de catálogo de sucursal
		[nCaja] int ,    -- id de caja de sucursal
		[nCliente] bigint NOT NULL,    -- id de catálogo de clientes
		[nIdLista] int NULL,    -- id de catálogo de lista de precio, opcional
		[nIDApertura] bigint NULL,    -- id de apertura al que pertenece el registro, opcional para cuando es una cotización o venta suspendida
		[dFecha] date NOT NULL,    -- fecha de apertura en que se realiza la venta
		[nFecha] int NULL,    -- fecha de apertura de la venta en formato numérico
		[nConsecutivo] int NOT NULL,    -- consecutivo para el tipo de registro por sucursal, no aplica para cuando es tipo de venta suspendida
		[nCotizacion] bigint NULL,    -- id de registro de cotización de donde pudo provenir la venta
		[nVentaOrigenDevolucion] bigint NULL,    -- id de registro de venta al que se le aplica la devolución
		[nEmpleado_Registra] int NOT NULL,    -- id de catalogo de empleado que realiza el registro
		[nSubtotal] decimal(18,4) NOT NULL,    -- importe subtotal de la venta
		[nImpuestoIVA] decimal(18,4) NOT NULL,    -- importe de impuesto de tipo iva
		[nImpuestoIEPS] decimal(18,4) NULL,    -- importe de impuesto de tipo IEPS
		[nImporteDescuento] decimal(18,2) NOT NULL,    -- importe de descuento en la venta basado de manera directa o el resultado de basarlo en un porcentaje
		[nPorcentajeDescuento] decimal(18,2) NULL,    -- campo para cuando se realice descuento basado en un porcentaje
		[nTotal] decimal(18,2) NOT NULL,    -- importe total de la venta
		[nIDRegistroCaja] bigint NULL,    -- id de registro del movimiento de caja para el pago, opcional para cuando es cotizacion
		[nPagaCon] decimal(18,2) NULL,    -- campo que indica el importe con el que se hizo el pago de la cuenta
		[nCambio] decimal(18,2) NOT NULL,    -- campo que indica el importe del cambio del importe pagado de la cuenta
		[bFactura] bit NOT NULL,    -- campo para saber si ticket esta facturado
		[nImporteFactura] decimal(18,2) NULL,    -- importe de la factura de la cuenta
		[nFacturaFinDia] int NULL,    -- id de registro de factura cuando el ticket va a factura de cierre de dia
		[nFactura] int NULL,    -- id de factura actualizado luego de hacer timbrado
		[cComentarios] varchar(2000) NULL,    -- notas a nivel cabecero de venta
		[cNombreCliente] varchar(100) NULL,    -- cuando registro es una cotización como queda relacionado a id de cliente de publico en general, se pide el nombre de la persona
		[nEmpleadoCancela] int NULL,    -- id de catálog de empleados que realiza la cancelación de la venta
		[nEmpleadoAutorizaCancelacion] int NULL,    -- id de empleado que hace la autorizacion de la cancelacion de la venta
		[nMotivoCancelacion] int NULL,    -- id de catalogo de motivos de tipo cancelacion para eliminar orden
		[cObservacionesCancelacion] varchar(200) NULL,    -- notas relacionadas a la razon de la cancelacion de la venta
		[bActivo] bit NOT NULL,    -- campo que indica si está activo o no el registro
		[cUsuario_Registra] varchar(50) NOT NULL,    -- login del usuario que realiza el registro
		[cMaquina_Registra] varchar(50) NOT NULL,    -- nombre del equipo desde donde se realiza el registro
		[dFecha_Registra] datetime NOT NULL,    -- fecha en que se hace el registro
		[cUsuario_Modifica] varchar(50) NULL,    -- login del usuario que realiza la ultima modificación del registro
		[cMaquina_Modifica] varchar(50) NULL,    -- nombre del equipo desde donde se realiza la ultima modificación del registro
		[dFecha_Modifica] datetime NULL,    -- fecha en que se hace la ultima modificación del registro
		[cUsuario_Cancela] varchar(50) NULL,    -- login del usuario que realiza la ultima inactivación del registro
		[cMaquina_Cancela] varchar(50) NULL,    -- nombre del equipo desde donde se realiza la ultima inactivación del registro
		[dFecha_Cancela] datetime NULL    -- fecha en que se hace la ultima inactivación del registro
	)
	
	/* Create Primary Keys, Indexes, Uniques, Checks */
	ALTER TABLE [VTA_MovimientosVenta] ADD CONSTRAINT [PK_VTA_MovimientosVenta]
		PRIMARY KEY CLUSTERED ([nVenta] ASC)
END
GO

/* Create Foreign Key Constraints */
IF not EXISTS (SELECT 1 FROM SysObjects (NOLOCK) where name ='FK_VTA_MovimientosVenta_CAJ_MovimientosCaja' AND xtype = 'F')
	ALTER TABLE [VTA_MovimientosVenta] ADD CONSTRAINT [FK_VTA_MovimientosVenta_CAJ_MovimientosCaja]
	FOREIGN KEY ([nIDRegistroCaja]) REFERENCES [CAJ_MovimientosCaja] ([nIDRegistroCaja]) ON DELETE No Action ON UPDATE No Action
GO

IF not EXISTS (SELECT 1 FROM SysObjects (NOLOCK) where name ='FK_VTA_MovimientosVenta_CAJ_RegistrosAperturaCaja' AND xtype = 'F')
	ALTER TABLE [VTA_MovimientosVenta] ADD CONSTRAINT [FK_VTA_MovimientosVenta_CAJ_RegistrosAperturaCaja]
	FOREIGN KEY ([nIDApertura]) REFERENCES [CAJ_RegistrosAperturaCaja] ([nIDApertura]) ON DELETE No Action ON UPDATE No Action
GO

IF not EXISTS (SELECT 1 FROM SysObjects (NOLOCK) where name ='FK_VTA_MovimientosVenta_CAT_Clientes' AND xtype = 'F')
	ALTER TABLE [VTA_MovimientosVenta] ADD CONSTRAINT [FK_VTA_MovimientosVenta_CAT_Clientes]
	FOREIGN KEY ([nCliente]) REFERENCES [dbo].[CAT_Clientes] ([nCliente]) ON DELETE No Action ON UPDATE No Action
GO

IF not EXISTS (SELECT 1 FROM SysObjects (NOLOCK) where name ='FK_VTA_MovimientosVenta_CAT_Empleados' AND xtype = 'F')
	ALTER TABLE [VTA_MovimientosVenta] ADD CONSTRAINT [FK_VTA_MovimientosVenta_CAT_Empleados]
	FOREIGN KEY ([nEmpleado_Registra]) REFERENCES [CAT_Empleados] ([nEmpleado]) ON DELETE No Action ON UPDATE No Action
GO

IF not EXISTS (SELECT 1 FROM SysObjects (NOLOCK) where name ='FK_VTA_MovimientosVenta_CAT_ListasPrecio' AND xtype = 'F')
	ALTER TABLE [VTA_MovimientosVenta] ADD CONSTRAINT [FK_VTA_MovimientosVenta_CAT_ListasPrecio]
	FOREIGN KEY ([nIdLista]) REFERENCES [CAT_ListasPrecio] ([nIdLista]) ON DELETE No Action ON UPDATE No Action
GO

IF not EXISTS (SELECT 1 FROM SysObjects (NOLOCK) where name ='FK_VTA_MovimientosVenta_CAT_Motivos' AND xtype = 'F')
	ALTER TABLE [VTA_MovimientosVenta] ADD CONSTRAINT [FK_VTA_MovimientosVenta_CAT_Motivos]
	FOREIGN KEY ([nMotivoCancelacion]) REFERENCES [CAT_Motivos] ([nMotivo]) ON DELETE No Action ON UPDATE No Action
GO

IF not EXISTS (SELECT 1 FROM SysObjects (NOLOCK) where name ='FK_VTA_MovimientosVenta_CAT_Sucursales' AND xtype = 'F')
	ALTER TABLE [VTA_MovimientosVenta] ADD CONSTRAINT [FK_VTA_MovimientosVenta_CAT_Sucursales]
	FOREIGN KEY ([nSucursal]) REFERENCES [dbo].[CAT_Sucursales] ([nSucursal]) ON DELETE No Action ON UPDATE No Action
GO

IF not EXISTS (SELECT 1 FROM SysObjects (NOLOCK) where name ='FK_VTA_MovimientosVenta_VTA_MovimientosVentaCotizacion' AND xtype = 'F')
	ALTER TABLE [VTA_MovimientosVenta] ADD CONSTRAINT [FK_VTA_MovimientosVenta_VTA_MovimientosVentaCotizacion]
	FOREIGN KEY ([nCotizacion]) REFERENCES [VTA_MovimientosVenta] ([nVenta]) ON DELETE No Action ON UPDATE No Action
GO

IF not EXISTS (SELECT 1 FROM SysObjects (NOLOCK) where name ='FK_VTA_MovimientosVenta_VTA_MovimientosVentaDev' AND xtype = 'F')
	ALTER TABLE [VTA_MovimientosVenta] ADD CONSTRAINT [FK_VTA_MovimientosVenta_VTA_MovimientosVentaDev]
	FOREIGN KEY ([nVenta]) REFERENCES [VTA_MovimientosVenta] ([nVenta]) ON DELETE No Action ON UPDATE No Action
GO

IF not EXISTS (SELECT 1 FROM SysObjects (NOLOCK) where name ='FK_VTA_MovimientosVentaAutCanc_CAT_Empleados' AND xtype = 'F')
	ALTER TABLE [VTA_MovimientosVenta] ADD CONSTRAINT [FK_VTA_MovimientosVentaAutCanc_CAT_Empleados]
	FOREIGN KEY ([nEmpleadoAutorizaCancelacion]) REFERENCES [CAT_Empleados] ([nEmpleado]) ON DELETE No Action ON UPDATE No Action
GO

IF not EXISTS (SELECT 1 FROM SysObjects (NOLOCK) where name ='FK_VTA_MovimientosVentaCanc_CAT_Empleados' AND xtype = 'F')
	ALTER TABLE [VTA_MovimientosVenta] ADD CONSTRAINT [FK_VTA_MovimientosVentaCanc_CAT_Empleados]
	FOREIGN KEY ([nEmpleadoCancela]) REFERENCES [CAT_Empleados] ([nEmpleado]) ON DELETE No Action ON UPDATE No Action
GO

IF not EXISTS (SELECT 1 FROM SysObjects (NOLOCK) where name ='FK_VTA_MovimientosVentaAutCanc_CAT_Cajas' AND xtype = 'F')
	ALTER TABLE [VTA_MovimientosVenta] ADD CONSTRAINT [FK_VTA_MovimientosVentaAutCanc_CAT_Cajas]
	FOREIGN KEY ([nCaja]) REFERENCES [CAT_Cajas] ([nCaja]) ON DELETE No Action ON UPDATE No Action
GO

