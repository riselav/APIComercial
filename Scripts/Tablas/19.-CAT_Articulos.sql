/* ---------------------------------------------------- */
/*  Generated by Enterprise Architect Version 13.0 		*/
/*  Created On : 05-feb.-2025 10:36:04 p. m. 				*/
/*  DBMS       : SQL Server 2012 						*/
/* ---------------------------------------------------- */

/* Create Tables */
IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[CAT_Articulos]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
BEGIN
CREATE TABLE [CAT_Articulos]
(
	[nIDArticulo] int NOT NULL,    -- id
	[cClave] varchar(20) NOT NULL,    -- código alfanumérico que se le desee asignar al artículo
	[cDescripcion] varchar(200) NOT NULL,    -- nombre del registro
	[nUnidad] int NOT NULL,    -- id de catálogo de unidades
	[cPresentacion] varchar(50) NULL,    -- nombre que quieran poner a una presentación cuando el tipo de unidad es pieza y le quieren poner un nombre particular
	[nLinea] int NOT NULL,    -- id de catálogo de línea relacionado al registro
	[nSublinea] int NULL,    -- id de catálogo de sublínea que se le puede relacionar al artículo
	[nMarca] int NULL,    -- id de catálogo de marca que se le desee relacionar al registro
	[cClaveSAT] varchar(50) NULL,    -- clave de producto SAT para el artículo
	[bLote] bit NOT NULL,    -- campo que indica si el artículo maneja lotes  
	[bSerie] bit NOT NULL,    -- campo que indica si el artículo maneja series
	[bPedimento] bit NOT NULL,    -- campo que indica si el artículo maneja pedimentos
	[bInsumoFinal] bit NULL,    -- campo para cuando aplique saber si el artículo es un producto base final
	[bProductoBase] bit NULL,    -- campo para saber si el artículo es un producto base
	[nIdProductoBase] int NULL,    -- id de catálogo de productos base
	[nIdUnidadRelacional] int NULL,
	[nEquivalencia] decimal(18,6) NULL,    -- equivalencia del producto vs el producto base
	[bManejaInventario] bit NOT NULL,    -- campo indicador de si se incluye o no el artículo en valor de inventario y conteos
	[bActivo] bit NOT NULL,    -- campo que indica si está activo o no el registro
	[cUsuario_Registra] varchar(50) NOT NULL,    -- login del usuario que realiza el registro
	[cMaquina_Registra] varchar(50) NOT NULL,    -- nombre del equipo desde donde se realiza el registro
	[dFecha_Registra] datetime NOT NULL,    -- fecha en que se hace el registro
	[cUsuario_Modifica] varchar(50) NULL,    -- login del usuario que realiza la ultima modificación del registro
	[cMaquina_Modifica] varchar(50) NULL,    -- nombre del equipo desde donde se realiza la ultima modificación del registro
	[dFecha_Modifica] datetime NULL,    -- fecha en que se hace la ultima modificación del registro
	[cUsuario_Cancela] varchar(50) NULL,    -- login del usuario que realiza la ultima inactivación del registro
	[cMaquina_Cancela] varchar(50) NULL,    -- nombre del equipo desde donde se realiza la ultima inactivación del registro
	[dFecha_Cancela] datetime NULL    -- fecha en que se hace la ultima inactivación del registro
)

	/* Create Primary Keys, Indexes, Uniques, Checks */

	ALTER TABLE [CAT_Articulos] ADD CONSTRAINT [PK_CAT_Articulos]
	PRIMARY KEY CLUSTERED ([nIDArticulo] ASC)

	ALTER TABLE [CAT_Articulos] 
	ADD CONSTRAINT [UQ_CodigoArticulo] UNIQUE NONCLUSTERED ([cClave] ASC)
END
GO

/* Create Foreign Key Constraints */
IF not EXISTS (SELECT 1 FROM SysObjects (NOLOCK) where name ='FK_CAT_Articulos_CAT_Lineas' AND xtype = 'F')
	ALTER TABLE [CAT_Articulos] ADD CONSTRAINT [FK_CAT_Articulos_CAT_Lineas]
	FOREIGN KEY ([nLinea]) REFERENCES [CAT_Lineas] ([nLinea]) ON DELETE No Action ON UPDATE No Action
GO

IF not EXISTS (SELECT 1 FROM SysObjects (NOLOCK) where name ='FK_CAT_Articulos_CAT_Marcas' AND xtype = 'F')
	ALTER TABLE [CAT_Articulos] ADD CONSTRAINT [FK_CAT_Articulos_CAT_Marcas]
	FOREIGN KEY ([nMarca]) REFERENCES [CAT_Marcas] ([nMarca]) ON DELETE No Action ON UPDATE No Action
GO

IF not EXISTS (SELECT 1 FROM SysObjects (NOLOCK) where name ='FK_CAT_Articulos_CAT_ProductosBase' AND xtype = 'F')
	ALTER TABLE [CAT_Articulos] ADD CONSTRAINT [FK_CAT_Articulos_CAT_ProductosBase]
	FOREIGN KEY ([nIdProductoBase]) REFERENCES [CAT_ProductosBase] ([nProductoBase]) ON DELETE No Action ON UPDATE No Action
GO

IF not EXISTS (SELECT 1 FROM SysObjects (NOLOCK) where name ='FK_CAT_Articulos_CAT_Sublineas' AND xtype = 'F')
	ALTER TABLE [CAT_Articulos] ADD CONSTRAINT [FK_CAT_Articulos_CAT_Sublineas]
	FOREIGN KEY ([nSublinea]) REFERENCES [CAT_Sublineas] ([nSublinea]) ON DELETE No Action ON UPDATE No Action
GO

IF not EXISTS (SELECT 1 FROM SysObjects (NOLOCK) where name ='FK_CAT_Articulos_CAT_Unidades' AND xtype = 'F')
	ALTER TABLE [CAT_Articulos] ADD CONSTRAINT [FK_CAT_Articulos_CAT_Unidades]
	FOREIGN KEY ([nUnidad]) REFERENCES [CAT_Unidades] ([nUnidad]) ON DELETE No Action ON UPDATE No Action
GO

IF not EXISTS (SELECT 1 FROM SysObjects (NOLOCK) where name ='FK_CAT_Articulos_CAT_UnidadesRelacionales' AND xtype = 'F')
	ALTER TABLE [CAT_Articulos] ADD CONSTRAINT [FK_CAT_Articulos_CAT_UnidadesRelacionales]
	FOREIGN KEY ([nIdUnidadRelacional]) REFERENCES [CAT_UnidadesRelacionales] ([nUnidadRelacional]) ON DELETE No Action ON UPDATE No Action
GO

IF dbo.fn_ExisteCampo('CAT_Articulos','nTipoArticulo')=0
	ALTER TABLE CAT_Articulos ADD nTipoArticulo smallint
GO