/* ---------------------------------------------------- */
/*  Generated by Enterprise Architect Version 13.0 		*/
/*  Created On : 20-mar.-2025 12:23:42 a. m. 				*/
/*  DBMS       : SQL Server 2012 						*/
/* ---------------------------------------------------- */

/* Create Tables */
IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[IVT_MovimientosInventario]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
BEGIN
CREATE TABLE [IVT_MovimientosInventario]
(
	[nFolioMovimiento] bigint NOT NULL,    -- id
	[nAlmacen] int NOT NULL,    -- id de catálogo de almacenes que hizo el movimiento
	[nTipoMovimiento] int NOT NULL,    -- id de catálogo de tipos de movimiento de inventario con el que se hizo el movimiento
	[nEfecto] smallint NOT NULL,    -- efecto del tipo de movimiento de inventario para aumentar o disminuir el movimiento de inventario
	[dFecha] datetime NOT NULL,    -- fecha del movimiento de inventario
	[nFecha] int NULL,    -- fecha del movimiento en formato número
	[cReferencia] varchar(20) NULL,    -- valor opcional, sirve para relacionar con algun dato que se considere necesario para el registro
	[nFolioSolicitud] bigint NULL,    -- id de solicitud de pedido con el que se relacione el movimiento de inventario, aplica solo para algunos tipos 
	[nFolioMateriaPrima] bigint NULL,    -- id de solicitud de materia prima (productos base) con el que se relacione el movimiento de inventario, aplica solo para algunos tipos
	[nAlmacenRelacionado] int NULL,    -- id de catálogo de almacenes que sirve como referencia cuando el tipo de movimiento de inventario requiere un origen (el que hace el movimiento) y un destino (el que se verá afectado en un movimiento de inventario posterior)
	[nFolioMovimientoRelacionado] bigint NULL,    -- id de movimiento de inventario que sirve como referencia cuando el tipo de movimiento requiere un folio cruzado para indicar que su flujo ha culminado
	[nFolioMovimientoCancelacion] bigint NULL,    -- id de movimiento que sirve como referencia cuando un registro ha sido cancelado, sería un contramovimiento
	[nTipoInvolucrado] tinyint NOT NULL,    -- campo para saber el tipo de involucrado relacionado al registro  valores  1=Almacen 2=Empleado 3=Involucrado 4=Proveedor 5=Cliente
	[nIDInvolucrado] int NOT NULL,    -- id de folio de catálogo relacionado dependiendo del valor del campo nTipoInvolucrado
	[bAplicado] bit NOT NULL,    -- campo para saber que el movimiento ha afectado o no tablas relacionadas a saldos de existencias u otras relacionadas derivadas del tipo de movimiento
	[bAplicadoParcial] bit NOT NULL,    -- campo para saber si solo una parte de su detalle ha afectado las tablas relacionadas a saldos de existencias u otras similares que dependen del tipo de movimiento
	[bTraspaso] bit NOT NULL,    -- campo para saber si el registro es un movimiento de traspaso
	[nEstatus] tinyint NOT NULL,    -- campo para saber alguna etapa de estatus de un movimiento de inventario cuando tenga un flujo más alla de activo/cancelado
	[nIDReferencia] bigint NULL,    -- id opcional relacionado a algun registro que pudiera ser requerido como un agrupador del movimiento de inventario o simplemente como su nombre lo dice una relación de referencia
	[nIDFactura] bigint NULL,    -- para casos donde el movimiento requiera facturarse aquí llevaría su id 
	[nIDFacturaTraslado] bigint NULL,    -- para casos donde el movimiento requiera un registro de traslado ante SAT aquí llevaría su id
	[bActivo] bit NOT NULL,    -- campo que indica si está activo o no el registro
	[cUsuario_Registra] varchar(50) NOT NULL,    -- login del usuario que realiza el registro
	[cMaquina_Registra] varchar(50) NOT NULL,    -- nombre del equipo desde donde se realiza el registro
	[dFecha_Registra] datetime NOT NULL,    -- fecha en que se hace el registro
	[cUsuario_Modifica] varchar(50) NULL,    -- login del usuario que realiza la ultima modificación del registro
	[cMaquina_Modifica] varchar(50) NULL,    -- nombre del equipo desde donde se realiza la ultima modificación del registro
	[dFecha_Modifica] datetime NULL,    -- fecha en que se hace la ultima modificación del registro
	[cUsuario_Cancela] varchar(50) NULL,    -- login del usuario que realiza la ultima inactivación del registro
	[cMaquina_Cancela] varchar(50) NULL,    -- nombre del equipo desde donde se realiza la ultima inactivación del registro
	[dFecha_Cancela] datetime NULL    -- fecha en que se hace la ultima inactivación del registro
)


/* Create Primary Keys, Indexes, Uniques, Checks */
	ALTER TABLE [IVT_MovimientosInventario] ADD CONSTRAINT [PK_IVT_MovimientosInventario]
	PRIMARY KEY CLUSTERED ([nFolioMovimiento] ASC)
END
GO

/* Create Foreign Key Constraints */
IF not EXISTS (SELECT 1 FROM SysObjects (NOLOCK) where name ='FK_IVT_MovimientosInventario_CAT_Almacenes' AND xtype = 'F')
	ALTER TABLE [IVT_MovimientosInventario] ADD CONSTRAINT [FK_IVT_MovimientosInventario_CAT_Almacenes]
	FOREIGN KEY ([nAlmacen]) REFERENCES [dbo].[CAT_Almacenes] ([nAlmacen]) ON DELETE No Action ON UPDATE No Action
GO

IF not EXISTS (SELECT 1 FROM SysObjects (NOLOCK) where name ='FK_IVT_MovimientosInventario_CAT_AlmacenesRel' AND xtype = 'F')
	ALTER TABLE [IVT_MovimientosInventario] ADD CONSTRAINT [FK_IVT_MovimientosInventario_CAT_AlmacenesRel]
	FOREIGN KEY ([nAlmacenRelacionado]) REFERENCES [dbo].[CAT_Almacenes] ([nAlmacen]) ON DELETE No Action ON UPDATE No Action
GO

IF not EXISTS (SELECT 1 FROM SysObjects (NOLOCK) where name ='FK_IVT_MovimientosInventario_CAT_TiposMovimientosInventario' AND xtype = 'F')
	ALTER TABLE [IVT_MovimientosInventario] ADD CONSTRAINT [FK_IVT_MovimientosInventario_CAT_TiposMovimientosInventario]
	FOREIGN KEY ([nTipoMovimiento]) REFERENCES [CAT_TiposMovimientosInventario] ([nTipoMovimiento]) ON DELETE No Action ON UPDATE No Action
GO

IF not EXISTS (SELECT 1 FROM SysObjects (NOLOCK) where name ='FK_IVT_MovimientosInventario_IVT_MovtosCancelacion' AND xtype = 'F')
	ALTER TABLE [IVT_MovimientosInventario] ADD CONSTRAINT [FK_IVT_MovimientosInventario_IVT_MovtosCancelacion]
	FOREIGN KEY ([nFolioMovimientoCancelacion]) REFERENCES [IVT_MovimientosInventario] ([nFolioMovimiento]) ON DELETE No Action ON UPDATE No Action
GO

IF not EXISTS (SELECT 1 FROM SysObjects (NOLOCK) where name ='FK_IVT_MovimientosInventario_IVT_MovtosRelacionados' AND xtype = 'F')
	ALTER TABLE [IVT_MovimientosInventario] ADD CONSTRAINT [FK_IVT_MovimientosInventario_IVT_MovtosRelacionados]
	FOREIGN KEY ([nFolioMovimientoRelacionado]) REFERENCES [IVT_MovimientosInventario] ([nFolioMovimiento]) ON DELETE No Action ON UPDATE No Action
GO